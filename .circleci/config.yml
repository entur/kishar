version: 2
aliases:
  - &jfrog-settings
      name: Write artifactory settings to file
      command: |
        echo "$ARTIFACTORY_SETTINGS" | base64 --decode > .circleci/settings.xml
  - &jfrog-login
    name: Rename jfrog environment variable for maven setting.xml
    command: |
      echo "export JFROG_USER=$ARTIFACTORY_USER"  >> $BASH_ENV
      echo "export JFROG_PASS=$ARTIFACTORY_PASSWORD"  >> $BASH_ENV

  - &post_build
    name: Trigger downstream builds
    command: |
      echo 'export CIRCLE_SHA1="$CIRCLE_SHA1"' >> $BASH_ENV
      echo 'export CIRCLE_PROJECT_REPONAME="$CIRCLE_PROJECT_REPONAME"' >> $BASH_ENV
      /tools/trigger_build_v2.sh "entur/kishar-deployment-config.git" "master" "$(git log -1 --pretty=%B)"
jobs:
  build:
    docker:
    - image: cimg/openjdk:17.0.1
      auth:
        username: _json_key
        password: $DOCKER_PASSWORD
    environment:
      MAVEN_OPTS: -Xmx3G
    steps:
    - checkout
    - restore_cache:
        key: dep-cache-{{ checksum "pom.xml" }}
    - run: *jfrog-settings
    - run: *jfrog-login
    - run: mvn org.apache.maven.plugins:maven-dependency-plugin:3.1.0:go-offline -s .circleci/settings.xml
    - save_cache:
        paths:
        - ~/.m2
        key: dep-cache-{{ checksum "pom.xml" }}
    # Cannot use -o because of snapshot dependencies.
    - run: mvn deploy -s /tools/m2/settings.xml
    - run:
        name: Save test results
        command: |
          mkdir -p ~/junit/
          find . -type f -regex ".*/target/surefire-reports/.*xml" -exec cp {} ~/junit/ \;
        when: always
    - store_test_results:
        path: ~/junit
    - store_artifacts:
        path: ~/junit
    - run: *post_build
workflows:
  version: 2
  build_test_deploy:
    jobs:
    - build:
        context: global
        filters:
          branches:
            only: master